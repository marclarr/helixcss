@charset "UTF-8";

///
// Widths
// Helps you create widths faster.
//
// @params  $sm, $md, $lg  The width in percent (e.g. 50%) for each respective breakpoint.
///

@mixin widths( $sm:100%, $md:$sm, $lg:$md  ) {
    width: $sm;
    @include md { width: $md; }
    @include lg { width: $lg; }
}

///
// Background
// The bg-clip mixin helps with leaking background-colors and images when using border-radius.
///

@mixin bg-retina( $url, $width, $height ) {
    @include retina {
        background-image: url($url);
        background-size: $width $height;
    }
}

@mixin bg-cover( $img_url, $attachment:scroll ) {
    background-image: url($url);
    background-attachment: $attachment;
    background-repeat: no-repeat;
    background-size: cover;
}

@mixin bg-clip( $clip:padding-box ) {
    background-clip: $clip;
}

///
// Text Shadow
// Quickly set a simple black or white text-shadow.
///

@mixin dark-text-shadow( $alpha: 0.25, $x_y_blur: 1px 1px 1px ) {
    text-shadow: $x_y_blur rgba(0, 0, 0, $alpha);
}

@mixin light-text-shadow( $alpha: 0.25, $x_y_blur: 1px 1px 1px ) {
    text-shadow: $x_y_blur rgba(255, 255, 255, $alpha);
}

///
// CSS Icon
// Hides the elements text and show an icon instead.
///

@mixin css-icon {
    font-size: 0;
    &::before {
        content: "\f333";
        font-family: dashicons;
        font-size: x-large;
        line-height: 1;
        // overwrite the above via @content
        @content;
    }
}

///
// Hide
// Hides an element but keeps it focusable. Good for hidding form elements like checkboxes, etc.
// @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
// @link https://css-tricks.com/almanac/properties/c/clip/
// @notes:
// - inset-rectangle() may replace inset()
// - rectangle() coming in SVG 2
///

@mixin hide {
    position: absolute !important; // required by clip
    overflow: hidden;
    height: 1px;
    width: 1px;
    clip: rect(1px, 1px, 1px, 1px); // depricated
    // chrome 24+, safari 8+, opera 15+
    -webkit-clip-path: inset(1px 1px 1px 1px);
            clip-path: inset(1px 1px 1px 1px);
}

// @mixin unhide {
//     position: inherit !important;
//     overflow: inherit;
//     height: inherit;
//     width: inherit;
//     clip: inherit; // depricated
//     // chrome 24+, safari 8+, opera 15+
//     -webkit-clip-path: inherit;
//             clip-path: inherit;
// }

///
// Hide Text - Good for image replacement.
///

@mixin hide-text {
    overflow: hidden;
    text-indent: 101%;
    white-space: nowrap;
}

///
// Truncate
// Prevents a string of text from breaking into the 2nd line and adds an ellipsis to the end.
///

@mixin truncate( $width:100% ) {
    max-width: 100%;
    width: $width;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// alias of truncate
@mixin ellipsis( $width:100% ) {
    @include truncate( $width );
}

///
// Justify Single Line
// Because a simple text-align: justify; won't justify one-liners. This mixin does.
///

@mixin justify-line( $clearfix:true ) {
    text-align: justify;
    text-justify: distribute-all-lines;
    @if $clearfix {
        &:after {
            content: '';
            display: inline-block;
            width: 100%;
        }
    }
}

///
// Clearfix
// There also exists a silent class for the clearfix (i.e. %cf & %clearfix).
// Source: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
///

@mixin clearfix {
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

///
// Select Reset
// Removes the drop-down indication from HTML select element.
///

@mixin select-reset {
    background-image: none;
    background-position: 0% 0%;
    background-size: auto auto;
}

///
// Center Absolute
// This needs to be within a non static positioned parent.
///

@mixin center-absolute( $x:50%, $y:50% ) {
    $x_flipped: $x;
    $y_flipped: $y;

    @if $x > 0 { $x_flipped: -$x; }
    @if $y > 0 { $y_flipped: -$y; }

    position: absolute;
    left: $x; top: $y;
    transform: translate( $x_flipped, $y_flipped );
}

///
// Cover Screen
///

@mixin cover-screen {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999999999;
}

///
// Striped Table
// table { @include table-striped(#eee); }
///

@mixin table-striped( $stripe_color ) {
    tbody tr:nth-of-type(odd){
        background-color: $stripe_color;
    }
}
